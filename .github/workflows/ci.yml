name: ðŸ§ª CI - Unit Tests

on:
  push:
    branches: [ master, main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'CMakeLists.txt'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ master, main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'CMakeLists.txt'
      - '.github/workflows/ci.yml'

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v2.0.2
      with:
        cmake-version: '3.29'
        
    - name: Cache APT packages
      uses: actions/cache@v4
      with:
        path: /var/cache/apt
        key: apt-${{ runner.os }}-${{ hashFiles('.github/workflows/ci.yml') }}
        restore-keys: |
          apt-${{ runner.os }}-
        
    - name: Cache CMake build directory
      uses: actions/cache@v4
      with:
        path: |
          build
          !build/src/raytracer*
          !build/**/*.exe
        key: cmake-${{ runner.os }}-${{ hashFiles('CMakeLists.txt', 'src/CMakeLists.txt', 'tests/CMakeLists.txt') }}
        restore-keys: |
          cmake-${{ runner.os }}-
          
    - name: Cache SFML and GoogleTest dependencies
      uses: actions/cache@v4
      with:
        path: |
          build/_deps
        key: deps-${{ runner.os }}-${{ hashFiles('src/CMakeLists.txt', 'tests/CMakeLists.txt') }}
        restore-keys: |
          deps-${{ runner.os }}-
        
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libgl1-mesa-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libfreetype6-dev
        
    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Debug
        
    - name: Build Project
      run: |
        cd build
        cmake --build . --parallel
        
    - name: Run Tests
      run: |
        cd build
        echo "Running Vec3 tests..."
        ./tests/Vec3_tests
        echo "Running Ray tests..."
        ./tests/Ray_tests
        echo "Running Camera tests..."
        ./tests/Camera_tests
        echo "Running Sphere tests..."
        ./tests/Sphere_tests
        echo "All tests completed successfully!"